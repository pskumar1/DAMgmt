--Activity Definition:
---------------------
--   Fellowship church of Lowell is running a non-profit school "Little Lambs" for pre-shool and KG kids to support the low income parents in the community.
--The school is currently needing a simple database to better manage the student and staff data and expand it later, when they start introducing higher grades.
--Additionally, the database can also be used to notify emails/messages to parents for various school/student events - for example, notifying about an uninformed absent, 
--snow days, scool holidays, church events etc.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

--CREATE the database with below in psql & execute the rest from pgAdmin Or psql for that db.
--Name: llschooldb; Database Owner: postgres

--CREATE DATABASE llschooldb;
--COMMENT ON DATABASE "llschooldb" IS 'The Little Lambs Pre School Management Database';

--EXECUTE THE BELOW AFTER THE DATABASE CREATION USING THE ABOVE COMMANDS.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

--Create Schema and Tables
DROP SCHEMA IF EXISTS SCHOOL CASCADE ;

CREATE SCHEMA SCHOOL;

DROP TABLE IF EXISTS SCHOOL.TYPE;
DROP TABLE IF EXISTS SCHOOL.STUDENT;
DROP TABLE IF EXISTS SCHOOL.CONTACTS;
DROP TABLE IF EXISTS SCHOOL.STAFF;
DROP TABLE IF EXISTS SCHOOL.CLASSROOM;
DROP TABLE IF EXISTS SCHOOL.CLASSROOM_STUDENT;
DROP TABLE IF EXISTS SCHOOL.ATTENDANCE;
DROP TABLE IF EXISTS SCHOOL.HOLIDAYS;

CREATE TABLE SCHOOL.TYPE(
   TYPE_ID         INT             PRIMARY KEY,
   TYPE_NAME       VARCHAR(30)     NOT NULL,
   TYPE_DESC       VARCHAR(30)     NULL,
   PARENT_TYP_ID   INT             NOT NULL  
);
COMMENT ON TABLE SCHOOL.TYPE IS 'Table that contains static data/starter data set of allowable values';

CREATE TABLE SCHOOL.STUDENT (
   STUDENT_ID      SERIAL           PRIMARY KEY ,
   FIRST_NAME      VARCHAR(30)    	NOT NULL,
   MIDDLE_NAME     VARCHAR(30)    	NULL,
   LAST_NAME       VARCHAR(30)    	NOT NULL,
   DOB		       VARCHAR(60)    	NOT NULL,
   JOIN_DATE	   DATE				NOT NULL,
   STATUS_TYP      INT            	NOT NULL REFERENCES SCHOOL.TYPE(TYPE_ID)
);
COMMENT ON TABLE SCHOOL.STUDENT IS 'Table that contains STUDENT basic data elements';

CREATE TABLE SCHOOL.CONTACTS (
   CONTACTS_ID   	SERIAL          PRIMARY KEY,
   STUDENT_ID		INT				NOT NULL REFERENCES SCHOOL.STUDENT(STUDENT_ID)  ON DELETE CASCADE,
   RELATION_TYP     INT             NOT NULL REFERENCES SCHOOL.TYPE(TYPE_ID),
   FIRST_NAME   	VARCHAR(30)     NOT NULL,
   LAST_NAME   		VARCHAR(30)     NOT NULL,
   PRIMARY_PHONE    VARCHAR(10)     NOT NULL,
   SECONDAY_PHONE   VARCHAR(10)     NULL,
   EMAIL		    VARCHAR(30)     NOT NULL,
   IS_PRIMARY   	BOOLEAN      	NOT NULL,
   STATUS_TYP		INT				NOT NULL REFERENCES SCHOOL.TYPE(TYPE_ID)
);
COMMENT ON TABLE SCHOOL.CONTACTS IS 'Table that contains student contacts data';

CREATE TABLE SCHOOL.STAFF(
   STAFF_ID   		SERIAL          PRIMARY KEY,
   USERID			VARCHAR(10)		UNIQUE NOT NULL,
   FIRST_NAME   	VARCHAR(30)     NOT NULL,
   LAST_NAME   		VARCHAR(30)     NOT NULL,
   TITLE			VARCHAR(30)		NOT NULL,
   PHONE	        VARCHAR(10)     NOT NULL,
   EMAIL		    VARCHAR(30)     NOT NULL,
   STATUS_TYP		INT		        NOT NULL REFERENCES SCHOOL.TYPE(TYPE_ID)
);
COMMENT ON TABLE SCHOOL.STAFF IS 'Table that contains school staff Data';

CREATE TABLE SCHOOL.CLASSROOM(
   CLASSROOM_ID   	SERIAL          PRIMARY KEY,
   SECTION			VARCHAR(2)		NOT NULL ,
   YEAR   			INT			    NOT NULL ,
   GRADE_TYP	 	INT			    NOT NULL REFERENCES SCHOOL.TYPE(TYPE_ID),
   STAFF_ID       INT     		    NOT NULL REFERENCES SCHOOL.STAFF(STAFF_ID),
   STATUS_TYP		INT		        NOT NULL REFERENCES SCHOOL.TYPE(TYPE_ID)
	);
COMMENT ON TABLE SCHOOL.CLASSROOM IS 'Table that contains association between Classroom-section and Teachers Data';

CREATE TABLE SCHOOL.CLASSROOM_STUDENT(
   CLASSROOM_STUDENT_ID   	SERIAL  PRIMARY KEY,
   CLASSROOM_ID      		INT     NOT NULL REFERENCES SCHOOL.CLASSROOM(CLASSROOM_ID),
   STUDENT_ID  				INT     NOT NULL REFERENCES SCHOOL.STUDENT(STUDENT_ID)  ON DELETE CASCADE,
   EFF_DATE       			DATE    NOT NULL,
   END_DATE       			DATE    NULL
);
COMMENT ON TABLE SCHOOL.CLASSROOM_STUDENT IS 'Table that contains the Student to classroom associations';

CREATE TABLE SCHOOL.ATTENDANCE(
   ATTENDANCE_ID			SERIAL  	PRIMARY KEY,
   STUDENT_ID				INT			NOT NULL REFERENCES SCHOOL.STUDENT(STUDENT_ID)  ON DELETE CASCADE,
   ATTENDANCE_DATE			DATE		NOT NULL,
   ATTENDANCE_STATUS_TYP	INT			NOT NULL REFERENCES SCHOOL.TYPE(TYPE_ID),
   ATTENDANCE_NOTES			VARCHAR(60)	NULL 
);
COMMENT ON TABLE SCHOOL.ATTENDANCE IS 'Table that contains the ROLL CALL data for all students for all the working days';

CREATE TABLE SCHOOL.HOLIDAY_CALENDAR(
   HOLIDAY_CALENDAR_ID		SERIAL  	PRIMARY KEY,
   HOLIDAY_DATE				DATE		NOT NULL,
   HOLIDAY_TITLE			VARCHAR(30)	NOT NULL
);
COMMENT ON TABLE SCHOOL.HOLIDAY_CALENDAR IS 'Table that contains the STATE HOLIDAYS. Data source is from http://www.sos.arkansas.gov/aboutOffice/Pages/stateHolidayCalendar.aspx';


--Static Data
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (1, 'STATUS_TYP', 'Status Type', 0 );
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (2, 'ACTIVE', 'Active Status', 1 );
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (3, 'INACTIVE', 'Inactive Status', 1 );

INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (10, 'RELATION_TYP', 'Relationship Type', 0 );
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (11, 'Mother', 'Parent - Mother', 10 );
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (12, 'Father', 'Parent - Father', 10 );
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (13, 'Uncle',  'Uncle', 10 );
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (14, 'Aunt', 'Aunt', 10 );
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (15, 'GrandParent', 'Grand Parent', 10 );
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (16, 'Other', 'Other', 10 );


INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (20, 'GRADE_TYP', 'Grade Type', 0 );
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (21, 'PK3', 'PRE-KG 3 YRS', 20 );
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (22, 'PK4', 'PRE-KG 4 YRS', 20 );
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (23, 'KG', 'Kindergarten', 20 );

INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (35, 'ATTENDANCE_TYP', 'Attendance Type', 0 );
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (36, 'PRESENT', 'Present', 35 );
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (37, 'TARDY', 'Late', 35 );
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (38, 'ABSENT', 'Absent', 35 );
INSERT INTO SCHOOL.TYPE (TYPE_ID, TYPE_NAME, TYPE_DESC, PARENT_TYP_ID) VALUES (39, 'MEDICAL LEAVE', 'MEDICAL LEAVE', 35 );


--Student data
INSERT INTO SCHOOL.STUDENT ( FIRST_NAME,  MIDDLE_NAME,  LAST_NAME ,  DOB , JOIN_DATE,  STATUS_TYP) 
VALUES 
 ('JOHN', 'K', 'CLEMEN', '2011-10-05', '2014-11-01', 2)
,('CHARLES', NULL, 'CARTER', '2011-01-11', '2014-08-01', 2)
,('ARTHUR', NULL, 'JASON', '2011-04-20', '2014-07-25', 2)
,('DAVID', NULL, 'BEARUP', '2010-10-11', '2013-10-12', 2)
,('JOSE', 'K', 'THOMAS', '2010-02-10', '2013-04-01', 2)
,('PAUL', NULL, 'HARMER', '2009-03-09', '2013-03-01', 2)
,('ROBERT', NULL, 'WELCH', '2009-01-10', '2013-02-01', 3)
,('DAVID', NULL, 'JOHNSON', '2009-02-05', '2013-01-02', 2)
,('ABBY', NULL, 'JEE', '2008-12-02', '2013-08-02', 3);


--Student contacts data
INSERT INTO SCHOOL.CONTACTS ( STUDENT_ID, RELATION_TYP,  FIRST_NAME  , LAST_NAME  ,PRIMARY_PHONE ,  SECONDAY_PHONE,  EMAIL, IS_PRIMARY,STATUS_TYP )
VALUES
 (1, 11, 'AMY', 'JOHN', '4791231234', NULL, 'AMY_JOHN@EMAIL.COM', TRUE, 2)
,(1, 12, 'RICHARD', 'BENSON', '4791233434', NULL, 'RICHARD_BEN@JMAIL.COM', FALSE, 2)
,(2, 11, 'PAUL', 'LIGHTNER', '4792342298', '4797654321', 'AMY_JOHN@EMAIL.COM', TRUE, 2)
,(3, 12, 'TYLER', 'JACKSON', '4798882235', NULL, 'TYLER007@TESTMAIL.COM', TRUE, 2)
,(4, 11, 'MICHELLE', 'TABOSO', '4798986579', NULL, 'MICHEL85@TMAIL.COM', TRUE, 2)
,(4, 13, 'JOHN', 'TABOSO', '4791128753', NULL, 'JOHN83@TMAIL.COM', FALSE, 2)
,(5, 12, 'MORGAN', 'SMITH', '4798751232', NULL, 'MORGANS@JUNKMAIL.COM', TRUE, 2)
,(6, 11, 'ROSIE', 'SAHU', '4793338988', '7601230980', 'ROSES@TEST.COM', TRUE, 2);


--staff data
INSERT INTO SCHOOL.STAFF ( USERID, FIRST_NAME  , LAST_NAME  , PHONE ,  EMAIL, STATUS_TYP, TITLE )
VALUES
  ('EMART01', 'EMILY', 'MARTIN', '4795556767', 'EMILY_MARTIN@YATEST.COM',  2, 'PRINCIPAL')
 ,('KGREG01', 'KENT', 'GREGORY', '4798887654', 'KENT_GREG@TESTMAIL.COM',  2, 'VICE-PRINCIPAL')
 ,('KCOOK01', 'CHRISTOPHER', 'COOK', '4793238899', 'CHRIS_COOK@TESTMAIL.COM', 2, 'TEACHER')
 ,('KROBI01', 'KEVIN', 'ROBINSON', '4797776644', 'KEVIN_ROB@TESTMAIL.COM', 2, 'TEACHER')
 ,('TGEOR01', 'TRAVIS', 'GEORGE', '4791299009', 'TRAVIS_GEORGE@TESTMAIL.COM', 2, 'TEACHER')
 ,('DWHIT01', 'DAVID', 'WHITESIDE', '4799096665', 'DAVID_WHITE@TESTMAIL.COM', 2, 'TEACHER')
 ,('WMILL01', 'WALT', 'MILLER', '4794504500', 'WALT_MILL@TESTMAIL.COM', 2, 'ASSISTANT')
 ,('JBROW01', 'JOHN', 'BROWN', '4794504500', 'JOHN_BROWN@TESTMAIL.COM', 2, 'ASSISTANT');

 
 --classroom section Vs teacher data
INSERT INTO SCHOOL.CLASSROOM ( SECTION, YEAR, GRADE_TYP, STAFF_ID,  STATUS_TYP )
VALUES
  ('A1', '2014', 21, 3, 2 )
 ,('A2', '2014', 21, 4, 2 )
 ,('B1', '2014', 22, 5, 2 )
 ,('B2', '2014', 22, 6, 2 );
  
--Classroom Vs Student - history
INSERT INTO SCHOOL.CLASSROOM_STUDENT (CLASSROOM_ID, STUDENT_ID, EFF_DATE, END_DATE) 
VALUES 
  (1, 1, '2014-11-01', '2014-12-01')
 ,(2, 1, '2015-01-02', NULL)
 ,(1, 2, '2014-08-01', NULL)
 ,(1, 3, '2014-07-25', NULL)
 ,(3, 4, '2014-08-01', NULL)
 ,(3, 5, '2014-08-01', NULL)
 ,(4, 6, '2014-08-01', NULL)
 ,(4, 7, '2014-08-10', NULL)
 ,(4, 8, '2014-08-01', NULL);

--Attendance record 
INSERT INTO SCHOOL.ATTENDANCE (STUDENT_ID, ATTENDANCE_DATE, ATTENDANCE_STATUS_TYP, ATTENDANCE_NOTES)
VALUES
  (1, '2014-08-15', 36, NULL)
 ,(2, '2014-08-15', 36, NULL)
 ,(3, '2014-08-15', 37, 'GOT LATE')
 ,(4, '2014-08-15', 38, NULL) 
 ,(5, '2014-08-15', 36, NULL) 
 ,(6, '2014-08-15', 39, 'SICK-INFORMED') 
 ,(7, '2014-08-15', 36, NULL) 
 ,(8, '2014-08-15', 36, NULL);

 
--Holiday Calendar 
--[ source -  http://www.sos.arkansas.gov/aboutOffice/Pages/stateHolidayCalendar.aspx' ]
INSERT INTO SCHOOL.HOLIDAY_CALENDAR ( HOLIDAY_DATE, HOLIDAY_TITLE )
VALUES
 ( '2015-05-25' , 'Memorial Day')
,( '2015-07-04' , 'Independence Day')
,( '2015-09-07' , 'Labor Day')
,( '2015-11-11' , 'Veterans Day')
,( '2015-11-26' , 'Thanksgiving Day')
,( '2015-12-24' , 'Christmas Eve')
,( '2015-12-25' , 'Christmas Day')
,( '2016-01-01' , 'New Year''s Day');